{"version":3,"sources":["redux/phonebook/phonebook-action.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/PreLoader/PreLoaderStyles.js","components/PreLoader/PreLoader.js","redux/phonebook/phonebook-selectors.js","components/ContactForm/ContactFormStyles.js","components/ContactForm/ContactForm .js","components/Filter/FilterStyles.js","components/Filter/Filter.js","components/ContactList/ContactListItemStyles.js","components/ContactList/ContactListItem.js","components/ContactList/ContactListStyles.js","components/ContactList/ContactList.js","components/App/AppStyles.js","components/App/App.js","index.js"],"names":["addContact","createAction","contact","payload","id","shortid","generate","deleteContact","filterContact","items","createReducer","state","filter","_","phonebookReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contacts","persistReducer","devTools","process","persistor","persistStore","LoaderContainer","styled","div","PreLoader","type","color","height","width","getContacts","filteredContacts","createSelector","filterBy","toLowerCase","name","includes","Form","form","InputForm","input","Button","button","LabelForm","label","ContactForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","handleChange","target","value","reset","onSubmit","event","preventDefault","verifiableName","handleName","find","checkingForExistenceOfSuchName","alert","onChange","placeholder","required","FilterInput","FilterLabel","Filter","e","ListItem","li","Text","p","ContactListItem","onClick","List","ul","ContactList","length","map","Container","MainTitle","h1","ContactTitle","h2","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.550e050d.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('add/Contact', contact => ({\n  payload: {\n    id: shortid.generate(),\n    ...contact,\n  },\n}));\nconst deleteContact = createAction('delete/Contact');\nconst filterContact = createAction('contact/Filter');\n\nexport { addContact, deleteContact, filterContact };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, filterContact } from './phonebook-action';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst phonebookReducer = combineReducers({\n  items,\n  filter,\n});\n\nexport default phonebookReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook/phonebook-reducer';\n\nconst contactsPersistConfig = {\n  key: 'userContacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, phonebookReducer),\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import styled from 'styled-components';\r\n\r\nconst LoaderContainer = styled.div`\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default LoaderContainer;\r\n","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nimport LoaderContainer from './PreLoaderStyles';\r\n\r\nconst PreLoader = () => {\r\n  return (\r\n    <LoaderContainer>\r\n      <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n    </LoaderContainer>\r\n  );\r\n};\r\n\r\nexport default PreLoader;\r\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.items;\nconst filter = state => state.contacts.filter;\n\nconst filteredContacts = createSelector(\n  [getContacts, filter],\n  (items, filter) => {\n    const filterBy = filter.toLowerCase();\n    return items.filter(({ name }) => name.toLowerCase().includes(filterBy));\n  },\n);\n\nexport { getContacts, filter, filteredContacts };\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: block;\n  margin-bottom: 10px;\n`;\n\nconst InputForm = styled.input`\n  display: block;\n  margin: 10px auto;\n  padding: 12px 20px;\n  font-size: 18px;\n  border-radius: 10px;\n\n  &::placeholder {\n    padding-left: 10px;\n    font-size: 18px;\n  }\n`;\n\nconst Button = styled.button`\n  outline: none;\n  padding: 12px 20px;\n  margin: 10px 5px;\n  border-radius: 10px;\n  background-color: #e9967a;\n  background-position: 100% 0;\n  background-size: 200% 200%;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 24px;\n  color: white;\n`;\n\nconst LabelForm = styled.label`\n  text-align: center;\n  font-size: 22px;\n  font-weight: bold;\n`;\n\nexport { Form, InputForm, Button, LabelForm };\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/phonebook/phonebook-action';\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\nimport { Form, LabelForm, InputForm, Button } from './ContactFormStyles';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(getContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const checkingForExistenceOfSuchName = verifiableName => {\n    const handleName = verifiableName.toLowerCase();\n    return items.find(({ name }) => name.toLowerCase() === handleName);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const repeatName = checkingForExistenceOfSuchName(name);\n\n    if (repeatName) {\n      alert(`${name} is already in contact`);\n    } else {\n      const newContact = { name, number };\n      dispatch(addContact(newContact));\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <LabelForm>\n        Name\n        <InputForm\n          onChange={handleChange}\n          type=\"text\"\n          name={'name'}\n          placeholder=\"Enter name\"\n          value={name}\n          required\n        />\n      </LabelForm>\n      <LabelForm>\n        Number\n        <InputForm\n          onChange={handleChange}\n          type=\"tel\"\n          name={'number'}\n          placeholder=\"Enter number\"\n          value={number}\n          required\n        />\n      </LabelForm>\n\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nconst FilterInput = styled.input`\n  display: block;\n  margin: 10px auto;\n  padding: 5px;\n  font-size: 18px;\n  border-radius: 10px;\n  outline: none;\n\n  &::placeholder {\n    padding-left: 10px;\n    font-size: 16px;\n  }\n`;\n\nconst FilterLabel = styled.label`\n  display: block;\n  text-align: center;\n  margin: 0 auto;\n  color: #fa8072;\n  font-size: 22px;\n  font-weight: bold;\n`;\n\nexport { FilterInput, FilterLabel };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filter } from '../../redux/phonebook/phonebook-selectors';\nimport { filterContact } from '../../redux/phonebook/phonebook-action';\nimport { FilterLabel, FilterInput } from './FilterStyles';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterBy = useSelector(filter);\n\n  const changeFilterName = e => dispatch(filterContact(e.target.value));\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput\n        value={filterBy}\n        onChange={changeFilterName}\n        type=\"text\"\n        placeholder=\"Enter name\"\n      />\n    </FilterLabel>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nconst ListItem = styled.li`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n`;\n\nconst Button = styled.button`\n  margin-left: auto;\n  outline: none;\n  padding: 2px 5px;\n  border-radius: 10px;\n  background-color: #fa8072;\n  background-position: 100% 0;\n  background-size: 200% 200%;\n  font-size: 16px;\n  color: white;\n`;\n\nexport { ListItem, Button, Text };\n","import PropTypes from 'prop-types';\nimport { ListItem, Text, Button } from './ContactListItemStyles';\n\nconst ContactListItem = ({ name, number, deleteContact }) => {\n  return (\n    <ListItem>\n      <Text>\n        {name}: {number}\n      </Text>\n      <Button type=\"button\" onClick={deleteContact}>\n        Delete\n      </Button>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport { List };\n","import { useSelector, useDispatch } from 'react-redux';\nimport ContactListItem from './ContactListItem';\nimport { List } from './ContactListStyles';\nimport { deleteContact } from '../../redux/phonebook/phonebook-action';\nimport { filteredContacts } from '../../redux/phonebook/phonebook-selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(filteredContacts);\n\n  return items && items.length > 0 ? (\n    <List>\n      {items.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          deleteContact={() => dispatch(deleteContact(id))}\n        />\n      ))}\n    </List>\n  ) : null;\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  background-color: var(--bgColorContainer);\n  width: 400px;\n  margin: 30px auto;\n  padding: 15px;\n  text-align: center;\n  border-radius: 10px;\n`;\n\nconst MainTitle = styled.h1`\n  font-size: 48px;\n  color: var(--titleColor);\n  text-align: center;\n`;\n\nconst ContactTitle = styled.h2`\n  color: var(--titleColor);\n  font-size: 24px;\n`;\n\nexport { Container, MainTitle, ContactTitle };\n","import ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\n\nimport { Container, MainTitle, ContactTitle } from './AppStyles';\n\nconst App = () => {\n  return (\n    <Container>\n      <MainTitle>Phonebook</MainTitle>\n      <ContactForm />\n      <ContactTitle>Contacts</ContactTitle>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\n\nimport { store, persistor } from './redux/store';\nimport PreLoader from './components/PreLoader';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<PreLoader />} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}